import 'dart:io';
import 'package:flutter/foundation.dart';
import 'app_logger.dart';
import 'system_info.dart';
import 'crash_reporter.dart';

/// –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ª–æ–≥–∞–º–∏
class LogUtils {
  static final AppLogger _logger = AppLogger.instance;
  static final SystemInfo _systemInfo = SystemInfo.instance;
  static final CrashReporter _crashReporter = CrashReporter.instance;

  /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –∫—Ä–∞—à-—Ä–µ–ø–æ—Ä—Ç–µ—Ä–∞
  static Future<void> initializeSystemInfo() async {
    try {
      await _systemInfo.initialize();
      await _crashReporter.initialize();
      _logger.info(
        '‚úÖ –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ –∫—Ä–∞—à-—Ä–µ–ø–æ—Ä—Ç–µ—Ä —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã',
      );
    } catch (e, stackTrace) {
      _logger.error(
        '‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏',
        e,
        stackTrace,
      );
    }
  }

  /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
  static Future<void> logExtendedAppInfo() async {
    _logger.info('=== –ó–ê–ü–£–°–ö –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø ===');

    // –î–æ–∂–∏–¥–∞–µ–º—Å—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –µ—Å–ª–∏ –æ–Ω–∞ –µ—â—ë –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞
    if (_systemInfo.appName == 'Unknown') {
      await _systemInfo.initialize();
    }

    // –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª–Ω—É—é —Å–∏—Å—Ç–µ–º–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    _logger.info(_systemInfo.getSystemInfoString());
  }

  /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—Ä–∞—Ç–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ
  static void logShortSystemInfo() {
    _logger.info('üì± ${_systemInfo.getShortSystemInfo()}');
  }

  /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ (—É—Å—Ç–∞—Ä–µ–≤—à–∏–π –º–µ—Ç–æ–¥)
  @Deprecated(
    '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ logExtendedAppInfo() –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏',
  )
  static void logAppInfo() {
    _logger.info('=== –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ===');
    _logger.info('–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${Platform.operatingSystem}');
    _logger.info('–í–µ—Ä—Å–∏—è: ${Platform.operatingSystemVersion}');
    _logger.info('Debug —Ä–µ–∂–∏–º: $kDebugMode');
    _logger.info('Release —Ä–µ–∂–∏–º: $kReleaseMode');
    _logger.info('Profile —Ä–µ–∂–∏–º: $kProfileMode');
  }

  /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  static void logPerformance(String operation, Duration duration) {
    _logger.info(
      '‚è±Ô∏è –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: $operation - ${duration.inMilliseconds}ms',
    );
  }

  /// –ò–∑–º–µ—Ä–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏
  static Future<T> measurePerformance<T>(
    String operationName,
    Future<T> Function() operation,
  ) async {
    final stopwatch = Stopwatch()..start();
    try {
      final result = await operation();
      stopwatch.stop();
      logPerformance(operationName, stopwatch.elapsed);
      return result;
    } catch (e, stackTrace) {
      stopwatch.stop();
      _logger.error(
        '–û—à–∏–±–∫–∞ –≤ –æ–ø–µ—Ä–∞—Ü–∏–∏ "$operationName" (${stopwatch.elapsed.inMilliseconds}ms)',
        e,
        stackTrace,
      );
      rethrow;
    }
  }

  /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
  static void logNavigation(String from, String to) {
    _logger.info('üß≠ –ù–∞–≤–∏–≥–∞—Ü–∏—è: $from ‚Üí $to');
  }

  /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π
  static void logUserAction(String action, {Map<String, dynamic>? details}) {
    final String message = details != null
        ? 'üë§ –î–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $action - $details'
        : 'üë§ –î–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $action';
    _logger.info(message);
  }

  /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –≤–∏–¥–∂–µ—Ç–æ–≤
  static void logWidgetLifecycle(String widgetName, String event) {
    _logger.debug('üì± –ñ–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª: $widgetName - $event');
  }

  /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
  static void logConnectivityStatus(bool isConnected) {
    final String status = isConnected ? '–ø–æ–¥–∫–ª—é—á–µ–Ω–æ' : '–æ—Ç–∫–ª—é—á–µ–Ω–æ';
    _logger.info('üåê –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ: $status');
  }

  /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
  static void logDatabaseOperation(
    String operation, {
    String? table,
    dynamic data,
  }) {
    final String message = table != null
        ? 'üóÑÔ∏è –ë–î –æ–ø–µ—Ä–∞—Ü–∏—è: $operation –≤ —Ç–∞–±–ª–∏—Ü–µ $table'
        : 'üóÑÔ∏è –ë–î –æ–ø–µ—Ä–∞—Ü–∏—è: $operation';
    _logger.debug(message, data);
  }

  /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏
  static void logFileOperation(String operation, String filePath) {
    _logger.debug('üìÅ –§–∞–π–ª–æ–≤–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è: $operation - $filePath');
  }

  /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
  static void logCriticalError(
    String context,
    dynamic error,
    StackTrace stackTrace, {
    Map<String, dynamic>? additionalInfo,
  }) {
    final String message = additionalInfo != null
        ? 'üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ $context - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: $additionalInfo'
        : 'üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ $context';
    _logger.fatal(message, error, stackTrace);
  }

  /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–∞–º—è—Ç–∏ (—Ç–æ–ª—å–∫–æ –≤ debug —Ä–µ–∂–∏–º–µ)
  static void logMemoryInfo() {
    if (kDebugMode) {
      // –í release —Ä–µ–∂–∏–º–µ ProcessInfo –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
      _logger.debug(
        'üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏',
      );
    }
  }

  /// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ –¥–ª—è –ª–æ–≥–æ–≤
  static String formatFileSize(int bytes) {
    if (bytes < 1024) return '$bytes B';
    if (bytes < 1024 * 1024) return '${(bytes / 1024).toStringAsFixed(1)} KB';
    return '${(bytes / (1024 * 1024)).toStringAsFixed(1)} MB';
  }

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—Ä–∞—Ç–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ—à–∏–±–∫–µ
  static String getErrorSummary(dynamic error) {
    if (error == null) return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';

    final String errorString = error.toString();
    if (errorString.length > 200) {
      return '${errorString.substring(0, 200)}...';
    }
    return errorString;
  }

  /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
  static void logDeviceDetails() {
    final deviceDetails = _systemInfo.getDeviceDetails();
    if (deviceDetails != null) {
      _logger.info('üì± –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ:');
      deviceDetails.forEach((key, value) {
        _logger.info('  $key: $value');
      });
    } else {
      _logger.warning('‚ö†Ô∏è –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
    }
  }

  /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–∫—Ä—É–∂–µ–Ω–∏–∏
  static void logEnvironmentInfo() {
    _logger.info('üåç –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–∫—Ä—É–∂–µ–Ω–∏–∏:');

    final appInfo = _systemInfo.getAppInfo();
    appInfo.forEach((key, value) {
      _logger.info('  App $key: $value');
    });

    final platformInfo = _systemInfo.getPlatformInfo();
    platformInfo.forEach((key, value) {
      _logger.info('  Platform $key: $value');
    });
  }

  /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–±–æ—Ä–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  static void logBuildInfo() {
    _logger.info('üîß –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–±–æ—Ä–∫–µ:');
    _logger.info('  –ù–∞–∑–≤–∞–Ω–∏–µ: ${_systemInfo.appName}');
    _logger.info('  –ü–∞–∫–µ—Ç: ${_systemInfo.packageName}');
    _logger.info('  –í–µ—Ä—Å–∏—è: ${_systemInfo.fullVersion}');
    _logger.info(
      '  –†–µ–∂–∏–º: ${kDebugMode
          ? 'Debug'
          : kReleaseMode
          ? 'Release'
          : 'Profile'}',
    );
  }

  /// –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –ª–æ–≥–∞ —Å —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
  static String createLogHeader() {
    final buffer = StringBuffer();
    buffer.writeln('=' * 60);
    buffer.writeln('–ù–û–í–ê–Ø –°–ï–°–°–ò–Ø –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø');
    buffer.writeln('–í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: ${DateTime.now().toIso8601String()}');
    buffer.writeln(_systemInfo.getShortSystemInfo());
    buffer.writeln('=' * 60);
    return buffer.toString();
  }

  /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏ —Å –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
  static Future<void> logSessionStart() async {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –µ—Å–ª–∏ –µ—â—ë –Ω–µ —Å–¥–µ–ª–∞–ª–∏
    if (_systemInfo.appName == 'Unknown') {
      await initializeSystemInfo();
    }

    _logger.info(createLogHeader());
    await logExtendedAppInfo();
  }

  /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏
  static void logSessionEnd() {
    _logger.info('=' * 60);
    _logger.info('–ó–ê–í–ï–†–®–ï–ù–ò–ï –°–ï–°–°–ò–ò –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø');
    _logger.info('–í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: ${DateTime.now().toIso8601String()}');
    _logger.info('=' * 60);
  }

  /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º —Å–∏—Å—Ç–µ–º—ã
  static void logCriticalErrorWithContext(
    String context,
    dynamic error,
    StackTrace stackTrace, {
    Map<String, dynamic>? additionalInfo,
  }) {
    _logger.fatal('üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê üí•');
    _logger.fatal('–ö–æ–Ω—Ç–µ–∫—Å—Ç: $context');
    _logger.fatal('–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: ${_systemInfo.getShortSystemInfo()}');

    if (additionalInfo != null) {
      _logger.fatal('–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:');
      additionalInfo.forEach((key, value) {
        _logger.fatal('  $key: $value');
      });
    }

    _logger.fatal('–û—à–∏–±–∫–∞:', error, stackTrace);
  }

  // === –ú–ï–¢–û–î–´ –î–õ–Ø –†–ê–ë–û–¢–´ –° –ö–†–ê–®-–†–ï–ü–û–†–¢–ê–ú–ò ===

  /// –°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–∞—à-—Ä–µ–ø–æ—Ä—Ç–∞ –¥–ª—è Flutter –æ—à–∏–±–∫–∏
  static Future<String?> reportFlutterCrash(
    String title,
    dynamic error,
    StackTrace stackTrace, {
    Map<String, dynamic>? additionalInfo,
  }) async {
    return await _crashReporter.reportCrash(
      type: CrashType.flutter,
      title: title,
      exception: error,
      stackTrace: stackTrace,
      additionalData: additionalInfo,
    );
  }

  /// –°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–∞—à-—Ä–µ–ø–æ—Ä—Ç–∞ –¥–ª—è Dart –æ—à–∏–±–∫–∏
  static Future<String?> reportDartCrash(
    String title,
    dynamic error,
    StackTrace stackTrace, {
    Map<String, dynamic>? additionalInfo,
  }) async {
    return await _crashReporter.reportCrash(
      type: CrashType.dart,
      title: title,
      exception: error,
      stackTrace: stackTrace,
      additionalData: additionalInfo,
    );
  }

  /// –°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–∞—à-—Ä–µ–ø–æ—Ä—Ç–∞ –¥–ª—è –Ω–∞—Ç–∏–≤–Ω–æ–π –æ—à–∏–±–∫–∏
  static Future<String?> reportNativeCrash(
    String title,
    dynamic error, {
    StackTrace? stackTrace,
    Map<String, dynamic>? additionalInfo,
  }) async {
    return await _crashReporter.reportCrash(
      type: CrashType.native,
      title: title,
      exception: error,
      stackTrace: stackTrace,
      additionalData: additionalInfo,
    );
  }

  /// –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫—Ä–∞—à-—Ä–µ–ø–æ—Ä—Ç–∞
  static Future<String?> reportCustomCrash(
    String title,
    dynamic error, {
    StackTrace? stackTrace,
    Map<String, dynamic>? additionalInfo,
  }) async {
    return await _crashReporter.reportCrash(
      type: CrashType.custom,
      title: title,
      exception: error,
      stackTrace: stackTrace,
      additionalData: additionalInfo,
    );
  }

  /// –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞—Ç–∞–ª—å–Ω–æ–≥–æ –∫—Ä–∞—à-—Ä–µ–ø–æ—Ä—Ç–∞
  static Future<String?> reportFatalCrash(
    String title,
    dynamic error,
    StackTrace stackTrace, {
    Map<String, dynamic>? additionalInfo,
  }) async {
    return await _crashReporter.reportCrash(
      type: CrashType.fatal,
      title: title,
      exception: error,
      stackTrace: stackTrace,
      additionalData: additionalInfo,
    );
  }

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—Ä–∞—à-—Ä–µ–ø–æ—Ä—Ç–æ–≤
  static Future<Map<CrashType, int>> getCrashReportsStatistics() async {
    return await _crashReporter.getCrashReportsCount();
  }

  /// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—Ä–∞—à-—Ä–µ–ø–æ—Ä—Ç–æ–≤
  static Future<void> logCrashReportsStatistics() async {
    try {
      final stats = await getCrashReportsStatistics();
      _logger.info('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫—Ä–∞—à-—Ä–µ–ø–æ—Ä—Ç–æ–≤:');

      int total = 0;
      stats.forEach((type, count) {
        _logger.info('  ${type.folderName}: $count');
        total += count;
      });

      _logger.info('  –í—Å–µ–≥–æ: $total');
    } catch (e) {
      _logger.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—Ä–∞—à-—Ä–µ–ø–æ—Ä—Ç–æ–≤', e);
    }
  }

  /// –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –∫—Ä–∞—à-—Ä–µ–ø–æ—Ä—Ç–æ–≤
  static Future<void> clearAllCrashReports() async {
    try {
      await _crashReporter.clearAllCrashReports();
      _logger.info('üóëÔ∏è –í—Å–µ –∫—Ä–∞—à-—Ä–µ–ø–æ—Ä—Ç—ã –æ—á–∏—â–µ–Ω—ã');
    } catch (e) {
      _logger.error('–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫—Ä–∞—à-—Ä–µ–ø–æ—Ä—Ç–æ–≤', e);
    }
  }

  /// –û—á–∏—Å—Ç–∫–∞ –∫—Ä–∞—à-—Ä–µ–ø–æ—Ä—Ç–æ–≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞
  static Future<void> clearCrashReportsByType(CrashType type) async {
    try {
      await _crashReporter.clearCrashReportsByType(type);
      _logger.info('üóëÔ∏è –ö—Ä–∞—à-—Ä–µ–ø–æ—Ä—Ç—ã —Ç–∏–ø–∞ ${type.folderName} –æ—á–∏—â–µ–Ω—ã');
    } catch (e) {
      _logger.error('–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫—Ä–∞—à-—Ä–µ–ø–æ—Ä—Ç–æ–≤ —Ç–∏–ø–∞ ${type.folderName}', e);
    }
  }

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—É—Ç–∏ –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∫—Ä–∞—à-—Ä–µ–ø–æ—Ä—Ç–æ–≤
  static String? getCrashReportsPath() {
    return _crashReporter.crashReportsPath;
  }

  /// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫—Ä–∞—à-—Ä–µ–ø–æ—Ä—Ç–µ—Ä–∞
  static bool get isCrashReporterInitialized => _crashReporter.isInitialized;
}
